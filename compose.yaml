services:
  postgres:
    container_name: idp_postgres
    image: postgres
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - pythonapi
      - adminernet
    environment:
      POSTGRES_USER: 'idp_user'
      POSTGRES_PASSWORD: 'idp_pass'
      POSTGRES_DB: 'db_idp'

  pythonapi:
    container_name: idp_python_api
    build:
      context: db-microservice
    restart: always
    ports:
      - 6000:6000
    volumes:
      - ./db-microservice:/idp_db
    networks:
      - pythonapi
    depends_on:
      postgres:
        condition: service_healthy

  adminer:
    container_name: idp-adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on: 
      postgres:
        condition: service_healthy
    networks:
      - adminernet

volumes:
  db-data:

networks:
  pythonapi:
  adminernet:
